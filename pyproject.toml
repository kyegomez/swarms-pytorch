[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "swarms-torch"
version = "0.2.1"
description = "swarms-torch - Pytorch"
license = "MIT"
authors = ["Kye Gomez <kye@apac.ai>"]
homepage = "https://github.com/kyegomez/swarms-pytorch"
documentation = ""  # Add this if you have documentation.
readme = "README.md"  # Assuming you have a README.md
repository = "https://github.com/kyegomez/swarms-pytorch"
keywords = ["artificial intelligence", "deep learning", "optimizers", "Prompt Engineering"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.6"
]
packages = [
    { include = "swarms_torch" },
    { include = "swarms_torch/**/*.py" },
]



[tool.poetry.dependencies]
python = "^3.6"
torch = "2.1.2"
einops = "0.7.0"
zetascale = "1.4.4"
pytest = "7.4.2"




[tool.poetry.group.lint.dependencies]
ruff = ">=0.0.249,<0.1.10"
types-toml = "^0.10.8.1"
types-redis = "^4.3.21.6"
types-pytz = "^2023.3.0.0"
black = "^23.1.0"
types-chardet = "^5.0.4.6"
mypy-protobuf = "^3.0.0"


[tool.autopep8]
max_line_length = 80
ignore = "E501,W6"  # or ["E501", "W6"]
in-place = true
recursive = true
aggressive = 3

[tool.ruff]
line-length = 80

[tool.black]
line-length = 80
target-version = ['py38']
preview = true